appId: com.electron.app
productName: minitasks
directories:
    buildResources: resources
files:
    - out/**
    - '!**/.vscode/*'
    - '!src/*'
    - '!electron.vite.config.{js,ts,mjs,cjs}'
    - '!{.eslintcache,eslint.config.mjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
    - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
extraResources:
    - from: resources/backend
      to: backend
      filter:
          - '**/*.py'
          - '**/*.exe'
asarUnpack:
    - resources/**
win:
    icon: icons/icon.ico
    executableName: minitasks
    signAndEditExecutable: true
    target:
        - nsis
nsis:
    artifactName: ${name}-${version}-setup.${ext}
    shortcutName: ${productName}
    uninstallDisplayName: ${productName}
    createDesktopShortcut: always
mac:
    icon: icons/icon.icns
    entitlementsInherit: build/entitlements.mac.plist
    extendInfo:
        - NSCameraUsageDescription: Application requests access to the device's camera.
        - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
        - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
        - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
    notarize: false
dmg:
    artifactName: ${name}-${version}.${ext}
linux:
    icon: icons
    target:
        - AppImage
        - snap
        - deb
    maintainer: electronjs.org
    category: Utility
appImage:
    artifactName: ${name}-${version}.${ext}
npmRebuild: false
publish:
    provider: generic
    url: https://example.com/auto-updates
electronDownload:
    mirror: https://npmmirror.com/mirrors/electron/
